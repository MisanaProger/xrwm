use std::cell::RefCell;

use xcb::x::Screen;

pub struct KeyboardEventHandler {
    input_buffer: RefCell<Vec<KeyCode>>,
    //  key_combinations: Vec<Vec<KeyCode>>,
}

impl KeyboardEventHandler {
    pub fn new() -> KeyboardEventHandler {
        KeyboardEventHandler {
            input_buffer: RefCell::new(Vec::new()),
        }
    }

    pub fn on_press(&self, event: xcb::x::KeyPressEvent) {
        self.input_buffer
            .borrow_mut()
            .push(KeyCode::from(event.detail()))
    }
}

impl From<u8> for KeyCode {
    fn from(value: u8) -> Self {
        match value {
            8 => Self::Space,
            9 => Self::Esc,
            10 => Self::Num1,
            11 => Self::Num2,
            12 => Self::Num3,
            13 => Self::Num4,
            14 => Self::Num5,
            15 => Self::Num6,
            16 => Self::Num7,
            17 => Self::Num8,
            18 => Self::Num9,
            19 => Self::Num0,
            20 => Self::Minus,
            21 => Self::PlusAndEqual,
            22 => Self::BackSpace,
            23 => Self::Tab,
            24 => Self::Q,
            25 => Self::W,
            26 => Self::E,
            27 => Self::R,
            28 => Self::T,
            29 => Self::Y,
            30 => Self::U,
            31 => Self::I,
            32 => Self::O,
            33 => Self::P,
            34 => Self::BracketLeft,
            35 => Self::BracketRight,
            36 => Self::Return,
            37 => Self::LeftControl,
            38 => Self::A,
            39 => Self::S,
            40 => Self::D,
            41 => Self::F,
            42 => Self::G,
            43 => Self::H,
            44 => Self::J,
            45 => Self::K,
            46 => Self::L,
            47 => Self::Colon,
            48 => Self::Apostrophe,
            49 => Self::Grave,
            50 => Self::LeftShift,
            51 => Self::BackSlash,
            52 => Self::Z,
            53 => Self::X,
            54 => Self::C,
            55 => Self::V,
            56 => Self::B,
            57 => Self::N,
            58 => Self::M,
            59 => Self::Less,
            60 => Self::Greater,
            61 => Self::Slash,
            62 => Self::RightShift,
            63 =>Self::NumpadMultiply,
            65 => Self::Space,
            66 => Self::CapsLock,
            67 => Self::F1,
            68=>Self::F2,
            69 => Self::F3,
            70 => Self::F4,
            71 => Self::F5,
            72=>Self::F6,
            73=>Self::F7,
            74=>Self::F8,
            75=>Self::F9,
            76=>Self::F10,
            77=>Self::NumLock,
            78=>Self::ScrollLock,
            79 =>Self::NumpadHome,
            80 =>Self::NumpadUp,
            81=>Self::NumpadPageUp,
            ``
        }
    }
}

pub enum KeyCode {
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,

    Less,
    Greater,
    BracketLeft,
    BracketRight,
    BackSlash,
    Slash,
    Esc,
    LeftControl,
    RightControl,
    LeftAlt,
    RightAlt,
    LeftShift,
    RightShift,
    Return,
    BackSpace,
    Space,
    Tab,
    CapsLock,
    LeftSuper,
    RightSuper,
    Menu,
    NumLock,
    Grave,
    Colon,
    Apostrophe,
    ScrollLock,

    End,
    Home,
    PageUp,
    PageDown,
    Pause,
    Delete,
    Insert,
    Print,

    Up,
    Down,
    Left,
    Right,

    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,

    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    Num0,
    Minus,
    PlusAndEqual,

    NumpadNum1,
    NumpadNum2,
    NumpadNum3,
    NumpadNum4,
    NumpadNum5,
    NumpadNum6,
    NumpadNum7,
    NumpadNum8,
    NumpadNum9,
    NumpadNum0,
    NumpadEnter,
    NumpadPlus,
    NumpadMinus,
    NumpadDevide,
    NumpadMultiply,
    NumpadDelete,
    NumpadDecimal,
    NumpadUp,
    NumpadDown,
    NumpadLeft,
    NumpadRight,
    NumpadEnd,
    NumpadHome,
    NumpadPageUp,
    NumpadPageDown,
    NumpadInsert,

    FunctionalPowerOff,
    FunctionalAudioLowerVolume,
    FunctionalRiseAudioVolume,
    FunctionalMute,
    FunctionalAudioPause,
    FunctionalAudioStop,
    FunctionalAudioMedia,
    FunctionalAudioPlay,
    FunctionalAudioRecord,
    FunctionalAudioNext,
    FunctionalAudioPrev,
    FunctionalAudioFarward,
    FunctionalMicrophoneMutea,

    FunctionlDisplay,
    FunctionalDisplayOff,

    FunctionalMonitorBrightnessDown,
    FunctionalMonitorBrightnessUp,
    FunctionalMonitorBrightnessCycle,

    FunctionalOpen,
    FunctionalClose,
    FunctionalCopy,
    FunctionalCut,
    FunctionalPaste,

    FunctionalSleep,
    FunctionalWakeUp,
    FunctionalCalculator,
    FunctionalSend,
    FunctionalScreenSaver,
    FunctionalMail,
    FunctionalFavorites,
    FunctionalTaskPlane,
    FunctionalLaunch1,
    FunctionalLaunch2,
    FunctionalMyComputer,
    FunctionalEject,
    FunctionalBack,
    FunctionalFarward,
    FunctionalRotateWindows,
    FunctionalExplorer,
    FunctionalHomePage,
    FunctionalReload,
    FunctionalTools,
    FunctionalPhone,
    FunctionalScrollUp,
    FunctionalScrollDown,
    FunctionalNew,
    FunctionalSearch,
    FunctionalReply,
}
